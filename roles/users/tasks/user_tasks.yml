---

 - set_fact:
     user_name: "{{ item }}"

 - name: create {{ user_name }} with a key
   user:
     name: "{{ user_name }}"
     shell: /bin/bash
     generate_ssh_key: yes
     state: present
     createhome: yes
   when: submit_host == "yes"

#THIS DOESN'T DO ANYTHING RIGHT NOW
 - name: get uid from submit_node
   getent: database=passwd key={{ user_name }} split=':'
   when: submit_host == "yes"

# - name: store uid as fact
#   set_fact:
#ok: [slurm-server] => {
#    "getent_passwd": {
#        "grid_user": [
#            "x", 
#            "1001", 
#            "1001", 
#            "", 
#            "/home/grid_user", 
#            "/bin/bash"
#        ]
#    }
#}
 - name: store UID as fact
   set_fact:
    cluster_users: "{{ cluster_users|default({})|combine( { user_name: getent_passwd[user_name][2] }) }}"
   when: submit_host == "yes"

 - name: print getent results
   debug:
     var: getent_passwd.{{ user_name }}[2]
   when: submit_host == "yes"

# - name: print user UID
#   debug:
#     var: cluster_users
#   when: submit_host == "yes"

 - name: print {{ user_name }} UID
   debug:
     var: hostvars['slurm-server']['cluster_users'][user_name] 
   when: submit_host == "no"

 - name: create {{ user_name }} on compute node
   user:
     name: "{{ user_name }}"
     shell: /bin/bash
     generate_ssh_key: yes
     state: present
     createhome: no
     uid: "{{ hostvars['slurm-server']['cluster_users'][user_name] }}"
   when: submit_host == "no"

 - name: copy key back to management machine
   synchronize:
     mode: pull
     use_ssh_args: yes
     src: /home/{{ item }}/.ssh/id_rsa.pub
     dest: roles/users/files/{{ user_name }}_id_rsa.pub
   when: submit_host == "yes"

